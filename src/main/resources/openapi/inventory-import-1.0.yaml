openapi: 3.0.0
info:
  title: Inventory import API
  version: v0.1
paths:

  /inventory-import/import-configs:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    get:
      operationId: getImportConfigs
      description: Get import configuration records
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importConfigs"
        "500":
          $ref: "#/components/responses/trait_500"
    post:
      description: Create import configuration
      operationId: postImportConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/importConfigPostPut"
        required: true
      responses:
        "201":
          description: Import configuration created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importConfigGet"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-configs/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import configuration identifier
        schema:
          type: string
    get:
      operationId: getImportConfig
      description: Get import configuration record
      parameters:
        - in: query
          name: query
          required: false
          description: CQL
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importConfigGet"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    put:
      operationId: putImportConfig
      description: Update an import configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/importConfigGet"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importConfigGet"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteImportConfig
      description: Delete an import configuration
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-configs/xml-bulk/{id}/import:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import configuration identifier (UUID)
        schema:
          type: string
    post:
      operationId: importXmlRecords
      description: Load XML document using given import configuration
      requestBody:
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/script"
        required: true
      responses:
        "204":
          description: No content
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"


  /inventory-import/import-configs/xml-bulk/{id}/activate:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import configuration identifier (UUID)
        schema:
          type: string
    get:
      operationId: startImportVerticle
      description: start verticle for given config ID that listens for incoming source records
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-configs/xml-bulk/{id}/deactivate:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import configuration identifier (UUID)
        schema:
          type: string
    get:
      operationId: stopImportVerticle
      description: stop verticle for given config ID that listens for incoming source records
      responses:
        "200":
          description: OK
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"


  /inventory-import/import-jobs:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    post:
      description: Create job log samples for test purposes etc, for example by import from another FOLIO instance.
      operationId: postImportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/importJob"
        required: true
      responses:
        "201":
          description: Job log created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importJob"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
    get:
      operationId: getImportJobs
      description: Retrieves list of past import jobs
      parameters:
        - in: query
          name: query
          required: false
          description: CQL query, import config ID, name, type, status, message, and amount imported in queries, and the same fields plus started and finished in sorting
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string
        - in: query
          name: from
          required: false
          description: date range start parameter on finished date
          schema:
            type: string
        - in: query
          name: until
          required: false
          description: date range end parameter on finished date
          schema:
            type: string
      responses:
        "200":
          description: List of past import jobs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importJobs"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-jobs/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import job identifier
        schema:
          type: string
          format: uuid
    get:
      operationId: getImportJob
      description: Retrieves details of a previous harvest job
      responses:
        "200":
          description: A past import job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/importJob"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteImportJob
      description: Delete a past import job with all its logs
      responses:
        "200":
          description: Job run and logs deleted
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-jobs/{id}/log:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import job identifier
        schema:
          type: string
          format: uuid
    get:
      operationId: getImportJobLogLines
      description: Retrieves the log of a past import job
      parameters:
        - in: query
          name: query
          required: false
          description: CQL, supporting import config ID, config name, line in query terms
          schema:
            type: string
      responses:
        "200":
          description: Logs for an import job
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                $ref: "#/components/schemas/logLines"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

    post:
      operationId: postImportJobLogLines
      description: For importing job logs from another source.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/logLines"
        required: true
      responses:
        "201":
          description: Logs imported
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/import-jobs/{id}/failed-records:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Import job identifier
        schema:
          type: string
          format: uuid
    get:
      operationId: getFailedRecordsForJob
      description: Retrieves the failed records of an import job
      parameters:
        - in: query
          name: query
          required: false
          description: CQL query
          schema:
            type: string
        - in: query
          name: from
          required: false
          description: date range parameter on error report timestamp
          schema:
            type: string
        - in: query
          name: until
          required: false
          description: date range parameter on error report timestamp
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string
      responses:
        "200":
          description: List of failed records for an import job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedRecords"

        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

    post:
      description: Create failed record samples without running a job, for example to import from another FOLIO instance.
      operationId: postFailedRecordsForJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/failedRecords"
        required: true
      responses:
        "201":
          description: Failed record entries created
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/failed-records/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    delete:
      operationId: deleteRecordFailure
      description: Delete a past import job with all its logs
      responses:
        "200":
          description: Record failure deleted
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/steps:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    get:
      operationId: getSteps
      description: Get step records
      parameters:
        - in: query
          name: query
          required: false
          description: CQL
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/steps"
        "500":
          $ref: "#/components/responses/trait_500"
    post:
      description: Create step
      operationId: postStep
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/step"
        required: true
      responses:
        "201":
          description: Step created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/step"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/steps/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Step identifier
        schema:
          type: string
    get:
      operationId: getStep
      description: Get detailed transformation step definition record
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/step"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    put:
      operationId: putStep
      description: Update a transformation step definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/step"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/step"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteStep
      description: Delete a transformation step definition
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/steps/{id}/script:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Step identifier
        schema:
          type: string
    get:
      operationId: getScript
      description: Get transformation step script
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/script"
        "500":
          $ref: "#/components/responses/trait_500"
    put:
      operationId: putScript
      description: Update a transformation step script
      requestBody:
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/script"
      responses:
        "204":
          description: OK, no content
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/transformations:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    get:
      description: Get transformation definitions
      operationId: getTransformations
      parameters:
        - in: query
          name: query
          required: false
          description: CQL
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string
      responses:
        "200":
          description: Transformation pipelines returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformations"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
    post:
      description: Create transformation pipeline
      operationId: postTransformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transformation"
        required: true
      responses:
        "201":
          description: Transformation pipeline created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformation"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/transformations/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Transformation pipeline identifier
        schema:
          type: string
    get:
      operationId: getTransformation
      description: Get transformation pipeline record
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformation"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    put:
      operationId: putTransformation
      description: Update a transformation pipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transformation"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformation"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteTransformation
      description: Delete a transformation pipeline
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/tsas:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
    get:
      parameters:
        - in: query
          name: query
          required: false
          description: CQL
          schema:
            type: string
        - in: query
          name: offset
          required: false
          description: result set start row
          schema:
            type: string
        - in: query
          name: limit
          required: false
          description: result set max rows
          schema:
            type: string
      operationId: getTsas
      description: Get transformation step associations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformationStepAssociations"
        "500":
          $ref: "#/components/responses/trait_500"
    post:
      operationId: postTsa
      description: Create new transformation step association
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transformationStepAssociation"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformationStepAssociation"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteTsas
      description: Delete all transformation step associations
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/tsas/{id}:
    parameters:
      - $ref: headers/okapi-tenant.yaml
      - $ref: headers/okapi-token.yaml
      - $ref: headers/okapi-url.yaml
      - in: path
        name: id
        required: true
        description: Association identifier
        schema:
          type: string
    get:
      operationId: getTsa
      description: Get a transformation step association by ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformationStepAssociation"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    put:
      operationId: putTsa
      description: Update a transformation step association
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transformationStepAssociation"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transformationStepAssociation"
        "400":
          $ref: "#/components/responses/trait_400"
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"
    delete:
      operationId: deleteTsa
      description: Delete a transformation step association by ID
      responses:
        "204":
          description: No content
        "404":
          $ref: "#/components/responses/trait_404"
        "500":
          $ref: "#/components/responses/trait_500"

  /inventory-import/purge-aged-logs:
    post:
      operationId: purgeAgedLogs
      description: Delete old import job logs from storage
      responses:
        "201":
          description: No content

components:
  responses:
    trait_400:
      description: Bad request
      content:
        text/plain:
          schema:
            type: string
            example: Invalid JSON in request
        application/json:
          schema:
            type: object
            example: {"error":"Invalid JSON in request"}
    trait_404:
      description: Bad request
      content:
        text/plain:
          schema:
            type: string
            example: Not found
    trait_500:
      description: Internal error
      content:
        text/plain:
          schema:
            type: string
            example: Internal server error, contact administrator
  schemas:
    transformations:
      $ref: schemas/transformations.json
    transformation:
      $ref: schemas/transformation.json
    steps:
      $ref: schemas/steps.json
    step:
      $ref: schemas/step.json
    script:
      $ref: schemas/script.json
    transformationStepAssociation:
      $ref: schemas/transformationStepAssociation.json
    transformationStepAssociations:
      $ref: schemas/transformationStepAssociations.json
    logLines:
      $ref: schemas/logLines.json
    failedRecord:
      $ref: schemas/failedRecord.json
    failedRecords:
      $ref: schemas/failedRecords.json
    importConfigPostPut:
      $ref: schemas/importConfigPostPut.json
    importConfigGet:
      $ref: schemas/importConfigGet.json
    importConfigs:
      $ref: schemas/importConfigs.json
    importJobs:
      $ref: schemas/importJobs.json
    importJob:
      $ref: schemas/importJob.json
